<?xml version="1.0" encoding="utf-8" ?>
<!-- Now we will see how to configure this host program to make things even easier.
We are going to take advange of WebServiceHost class to hide some of these details.
-->
<configuration>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.1" />
    </startup>
  <system.serviceModel>
    <services>
      <service behaviorConfiguration="Default" name="EvalServiceLibrary.EvalService">
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8080/evalservice"/>
          </baseAddresses>
        </host>
        <!-- Removing all the stuff that could be easily taken care by the
        WebServiceHost class.-->
      <endpoint address="" binding="webHttpBinding"
                contract="EvalServiceLibrary.IEvalService"
                behaviorConfiguration="Web"/>
        <!--Restart the host, and althogh you will see the same screen, this time host is exposing
        service using WebHttp binding rather than SOAP. Now it expects to be called using traditional
        HTTP GET Requests. Refer rtf document Console_Host_Http_Test for further details.-->
      </service>
    </services>
  <behaviors>
    <serviceBehaviors>
      <behavior name="Default">
        <serviceMetadata httpGetEnabled="true"/>
        <serviceDebug includeExceptionDetailInFaults="true"/>
      </behavior>
    </serviceBehaviors>
    <endpointBehaviors>
      <behavior name="Web">
        <webHttp/>
      </behavior>
    </endpointBehaviors>
  </behaviors>
  </system.serviceModel>
</configuration>