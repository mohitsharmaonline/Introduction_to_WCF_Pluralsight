<?xml version="1.0" encoding="utf-8" ?>
<!-- Although the tutorial depicted creating New Iteam of type 'Application Configuration File',
 We are using existing App.config file in our Cosnole Project. -->
<!-- Start of Behaviours implementation ways. First we will see to enable WSDL
metadata publishing. We will do it using configuration editor, right click on App.config and select 
'Edit WCF configuration.', Refer rtf document Adding_behaviour_via_configuration_editor-->
<!--After enabling serviceMetadata, we will see how to expose a MEX-based endpoint on our service.-->
<configuration>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.1" />
    </startup>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior name="Metadata">
          <serviceMetadata httpGetEnabled="true" httpGetUrl="http://localhost:8080/evals/meta" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <bindings>
      <wsHttpBinding>
        <binding name="NoSecurityPlusRm">
          <reliableSession enabled="true" />
          <security mode="None" />
        </binding>
      </wsHttpBinding>
    </bindings>
    <services>
      <service behaviorConfiguration="Metadata" name="EvalServiceLibrary.EvalService">
        <endpoint address="http://localhost:8080/evals/basic" binding="basicHttpBinding"
          contract="EvalServiceLibrary.IEvalService" />
        <endpoint address="http://localhost:8080/evals/ws" binding="wsHttpBinding"
          bindingConfiguration="NoSecurityPlusRm" contract="EvalServiceLibrary.IEvalService" />
        <endpoint address="net.tcp://localhost:8081/evals" binding="netTcpBinding"
          contract="EvalServiceLibrary.IEvalService" />
        <endpoint address="net.pipe://localhost/evals" binding="netNamedPipeBinding"
          contract="EvalServiceLibrary.IEvalService" />
        <endpoint address="http://localhost:8080/evals/onemore" binding="basicHttpBinding"
          bindingConfiguration="" contract="EvalServiceLibrary.IEvalService" />
        <!-- Adding new endpoint manually. -->
        <!-- IMetadataExchange is the built in contract for the metadata exchange. -->
        <endpoint address="http://localhost:8080/evals/mex" 
                  binding="mexHttpBinding"
                  contract="IMetadataExchange"/>
        <!-- Another mex endpoint for tcp. -->
        <endpoint address="net.tcp://localhost:8081/evals/mex"
                  binding="mexTcpBinding"
                  contract="IMetadataExchange"/>
        <!-- Save it and press Ctrl+F5 , refer rtf file 'exposing_a_mex_based_endpoint'-->
      </service>
    </services>
  </system.serviceModel>
</configuration>